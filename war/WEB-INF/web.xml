<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
              http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5" xmlns="http://java.sun.com/xml/ns/javaee">

	<!-- Servlets -->


	<!-- Admin Servlets -->

	<servlet>
		<servlet-name>adminGreetServlet</servlet-name>
		<servlet-class>com.blipnip.admin.server.greeting.service.GreetServiceImpl</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>adminGreetServlet</servlet-name>
		<url-pattern>/blipnip_admin/AdminGreet</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>adminEntityManagerServlet</servlet-name>
		<servlet-class>com.blipnip.admin.server.entitymanager.service.EntityManagerServiceImpl</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>adminEntityManagerServlet</servlet-name>
		<url-pattern>/blipnip_admin/persistentservice</url-pattern>
	</servlet-mapping>

	<!-- / -->

	<!-- App Servlets -->

	<servlet>
		<servlet-name>loginServlet</servlet-name>
		<servlet-class>com.blipnip.app.server.LoginServiceImpl</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>loginServlet</servlet-name>
		<url-pattern>/blipnip_app/login</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>mainAppServlet</servlet-name>
		<servlet-class>com.blipnip.app.server.MainAppServiceImpl</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>mainAppServlet</servlet-name>
		<url-pattern>/blipnip_app/mainapp</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>blobServlet</servlet-name>
		<servlet-class>com.blipnip.app.server.BlobServiceImpl</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>blobServlet</servlet-name>
		<url-pattern>/blipnip_app/blobservice</url-pattern>
	</servlet-mapping>


	<servlet>
		<servlet-name>uploadServlet0</servlet-name>
		<servlet-class>com.blipnip.app.server.UploadServiceImpl</servlet-class>
	</servlet>


	<!-- The url pattern below is used in BlobServiceImpl, -->

	<servlet-mapping>
		<servlet-name>uploadServlet0</servlet-name>
		<url-pattern>/blipnip_app/uploadservice</url-pattern>
	</servlet-mapping>


	<!-- / -->

	<!-- Commons Servlets -->

	<servlet>
		<servlet-name>greetServlet</servlet-name>
		<servlet-class>com.blipnip.commons.server.generic.GreetingServiceImpl</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>greetServlet</servlet-name>
		<url-pattern>/blipnip_app/greet</url-pattern>
	</servlet-mapping>

	<!-- Additional entries for gwtupload -->
	<context-param>
		<!-- max size of the upload request -->
		<param-name>maxSize</param-name>
		<param-value>3145728</param-value>
	</context-param>

	<context-param>
		<!-- Useful in development mode to slow down the uploads in fast networks. 
			Put the number of milliseconds to sleep in each block received in the server. 
			false or 0, means don't use slow uploads -->
		<param-name>slowUploads</param-name>
		<param-value>0</param-value>
	</context-param>

	<servlet>
		<servlet-name>uploadServlet</servlet-name>
		<!-- This is the default servlet, it puts files in session -->
		<!-- <servlet-class>gwtupload.server.UploadServlet</servlet-class> -->
		<servlet-class>gwtupload.server.gae.AppEngineUploadAction</servlet-class>
		<!-- <servlet-class>gwtupload.server.gae.BlobstoreUploadAction</servlet-class> -->
		<!-- <servlet-class>com.blipnip.app.server.BlobstoreServiceSampleImpl</servlet-class> -->
	</servlet>

	<servlet-mapping>
		<servlet-name>uploadServlet</servlet-name>
		<url-pattern>*.gupld</url-pattern>
		<!-- <url-pattern>*.gupld</url-pattern> -->
	</servlet-mapping>

	<!-- / -->

	<!-- Cron Servlets for Tasks server side needs to perform -->

	<servlet>
		<servlet-name>exampleCronService</servlet-name>
		<servlet-class>com.blipnip.app.server.MaintenanceCronTaskImpl</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>exampleCronService</servlet-name>
		<url-pattern>/cronexample</url-pattern>
	</servlet-mapping>

	<!-- / -->

	<!-- Default page to serve -->

	<welcome-file-list>
		<welcome-file>Blipnip.html</welcome-file>
	</welcome-file-list>

	<!-- Allow access to admin page only to signed in users with Google account. 
		If a user accesses a URL whose path has a security constraint and the user 
		is not signed in, App Engine redirects the user to the Google Accounts sign-in 
		page. Google Accounts redirects the user back to the application URL after 
		successfully signing in or registering a new account. The app does not need 
		to do anything else to ensure that only signed-in users can access the URL. 
		https://developers.google.com/appengine/docs/java/config/webxml#Security_and_Authentication 
		Note: Google Apps domain administrators and App Engine domain administrators 
		are not included in the admin role in this context. Only the application 
		developers, such as those in Viewer/Owner/Developer roles, can access these 
		portions of the application. -->
	<security-constraint>
		<web-resource-collection>
			<web-resource-name>admin</web-resource-name>
			<url-pattern>/admin/*</url-pattern>
			<!-- <url-pattern>/*</url-pattern> -->
		</web-resource-collection>
		<auth-constraint>
			<role-name>admin</role-name>
		</auth-constraint>
	</security-constraint>

  <!--<security-constraint> 
		    <web-resource-collection> 
		    	<web-resource-name>blipnip_admin</web-resource-name> 
				<url-pattern>/blipnip_admin/*</url-pattern> <url-pattern>/*</url-pattern> 
			</web-resource-collection> 
			<auth-constraint>
				 <role-name>admin</role-name> 
			</auth-constraint> 
		</security-constraint> 
		
		<security-constraint> 
		<web-resource-collection> 
		<web-resource-name>blipnip_app</web-resource-name> <url-pattern>/blipnip_app/*</url-pattern> 
		<url-pattern>/*</url-pattern> </web-resource-collection> <auth-constraint> 
		<role-name>admin</role-name> </auth-constraint> </security-constraint> -->

	<!-- http://stackoverflow.com/questions/8486514/require-user-login-in-gwt-with-web-xml -->
	<security-constraint>
		<web-resource-collection>
			<web-resource-name>all</web-resource-name>
			<url-pattern>/*</url-pattern>
		</web-resource-collection>
		<auth-constraint>
			<role-name>admin</role-name>
		</auth-constraint>
	</security-constraint>

	<!-- Prevent users from accessing URLs used by scheduled tasks by restricting 
		access to administrator accounts. Scheduled tasks can access admin-only URLs. 
		You can read about restricting URLs at Security and Authentication. An example 
		you would use in web.xml to restrict everything starting with /cron/ to admin-only 
		is the following. -->
	<security-constraint>
		<web-resource-collection>
			<web-resource-name>cron</web-resource-name>
			<url-pattern>/cron/*</url-pattern>
		</web-resource-collection>
		<auth-constraint>
			<role-name>admin</role-name>
		</auth-constraint>
	</security-constraint>


	<!-- Enabling and Setting Up Application Monitoring Using AppStat -->
<!-- 	<filter>
		<filter-name>appstats</filter-name>
		<filter-class>com.google.appengine.tools.appstats.AppstatsFilter</filter-class>
		<init-param>
			<param-name>calculateRpcCosts</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>appstats</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<servlet>
		<servlet-name>appstats</servlet-name>
		<servlet-class>com.google.appengine.tools.appstats.AppstatsServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>appstats</servlet-name>
		<url-pattern>/appstats/*</url-pattern>
	</servlet-mapping>

	<security-constraint>
		<web-resource-collection>
			<web-resource-name>appstats</web-resource-name>
			<url-pattern>/appstats/*</url-pattern>
		</web-resource-collection>
		<auth-constraint>
			<role-name>admin</role-name>
		</auth-constraint>
	</security-constraint> -->



</web-app>
